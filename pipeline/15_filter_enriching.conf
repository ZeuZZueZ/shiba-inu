filter {


  if "_aggregatetimeout" in [tags] {

    geoip {
		  source => 'clientip'
      add_tag => [ "_geoip" ] 
  	}

    if "_geoip" in [tags]  {       

      mutate {
        copy => {
          "[geoip][country_code2]" => "country_code"
          }
      }
    }

    # rest {
    #   request => {
    #     url => 'https://api.datacite.org/works?id=%{doi}'
    #     method => 'get'
    #     params => {                       
    #       id => '%{[doi]}'
    #       # id => '%{[doi]}'
    #     }
    #   }
    #   target => 'dc_metadata'                  
    #   fallback => {                        
    #     'error' => true
    #   }
    #   add_tag => [ "_dc_meta" ]
    # }

  ruby {
      # Cancel 90% of events
      path => "/usr/share/logstash/filters/maremma.rb"
      add_tag => [ "_dc_meta" ]
    }

    if [dc_metadata][data][attributes][doi] == [doi]  {       

      mutate {
        copy => {
          "[dc_metadata][data][attributes][published]" => "published"
          "[dc_metadata][data][attributes][resource-type-id]" => "resource-type-id"
          "[dc_metadata][data][attributes][title]" => "title"
          "[dc_metadata][data][attributes][data-center-id]" => "client-id" 
          }
      }
    }
    # else{
    #   mutate {
    #     copy => {
    #       "[dc_metadata][error]" => "metadata_error"
    #     }
    # }

  
    # prune {
    #     blacklist_names => ["xml","^checked$","^media$","^results$","^description$"]
    # }
    # doesn't support nested fields, i need ruby filter here
  }
}
